import org.junit.jupiter.api.Assertions.assertEquals
import org.junit.jupiter.api.Test

class AOC10Tests {
    @Test
    fun `Test part 1 example 1 returns 8 asteroids detected`() {
        val input = listOf(
            ".#..#",
            ".....",
            "#####",
            "....#",
            "...##"
        )

        assertEquals(8, AOC10.part1(input))
    }

    @Test
    fun `Test part 1 example 2 return 33 asteroids detected`() {
        val input = listOf(
            "......#.#.",
            "#..#.#....",
            "..#######.",
            ".#.#.###..",
            ".#..#.....",
            "..#....#.#",
            "#..#....#.",
            ".##.#..###",
            "##...#..#.",
            ".#....####"
        )
        assertEquals(33, AOC10.part1(input))
    }

    @Test
    fun `Test part 1 example 3 returns 35 asteroids detected`() {
        val input = listOf(
            "#.#...#.#.",
            ".###....#.",
            ".#....#...",
            "##.#.#.#.#",
            "....#.#.#.",
            ".##..###.#",
            "..#...##..",
            "..##....##",
            "......#...",
            ".####.###."
        )
        assertEquals(35, AOC10.part1(input))
    }

    @Test
    fun `Test part 1 example 4 returns 41 asteroids detected`() {
        val input = listOf(
            ".#..#..###",
            "####.###.#",
            "....###.#.",
            "..###.##.#",
            "##.##.#.#.",
            "....###..#",
            "..#.#..#.#",
            "#..#.#.###",
            ".##...##.#",
            ".....#.#.."
        )
        assertEquals(41, AOC10.part1(input))
    }

    @Test
    fun `Test part 1 example 5 returns 210 asteroids detected`() {
        val input = listOf(
            ".#..##.###...#######",
            "##.############..##.",
            ".#.######.########.#",
            ".###.#######.####.#.",
            "#####.##.#.##.###.##",
            "..#####..#.#########",
            "####################",
            "#.####....###.#.#.##",
            "##.#################",
            "#####.##.###..####..",
            "..######..##.#######",
            "####.##.####...##..#",
            ".#####..#.######.###",
            "##...#.##########...",
            "#.##########.#######",
            ".####.#.###.###.#.##",
            "....##.##.###..#####",
            ".#.#.###########.###",
            "#.#.#.#####.####.###",
            "###.##.####.##.#..##"
        )
        assertEquals(210, AOC10.part1(input))
    }

    @Test
    fun `Test part 2 big example's 200th asteroid is at 8,2 (returns 802)`(){
        val input = listOf(
            ".#..##.###...#######",
            "##.############..##.",
            ".#.######.########.#",
            ".###.#######.####.#.",
            "#####.##.#.##.###.##",
            "..#####..#.#########",
            "####################",
            "#.####....###.#.#.##",
            "##.#################",
            "#####.##.###..####..",
            "..######..##.#######",
            "####.##.####...##..#",
            ".#####..#.######.###",
            "##...#.##########...",
            "#.##########.#######",
            ".####.#.###.###.#.##",
            "....##.##.###..#####",
            ".#.#.###########.###",
            "#.#.#.#####.####.###",
            "###.##.####.##.#..##"
        )
        assertEquals(802, AOC10.part2(input))
    }
}